name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  compile:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

  #   - name: Install Maven
  #     run: sudo apt-get update && sudo apt-get install -y maven

  #   - name: Build with Maven
  #     run: mvn -B package --file pom.xml

  security-check:
    runs-on: ubuntu-latest
    needs: compile

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies (Git, jq)
      run: sudo apt-get update && sudo apt-get install -y git jq

    - name: Install Trivy
      run: |
        sudo apt-get install -y wget gnupg lsb-release apt-transport-https
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo gpg --dearmor -o /usr/share/keyrings/trivy-archive-keyring.gpg
        echo "deb [signed-by=/usr/share/keyrings/trivy-archive-keyring.gpg] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/trivy.list
        sudo apt-get update -y
        sudo apt-get install -y trivy

    - name: Run Trivy File System Scan
      run: trivy fs --format json --output fs-report.json .

    - name: Install Gitleaks
      run: |
        wget https://github.com/gitleaks/gitleaks/releases/latest/download/gitleaks_$(curl -s https://api.github.com/repos/gitleaks/gitleaks/releases/latest | jq -r '.tag_name' | sed 's/^v//')_linux_x64.tar.gz -O gitleaks.tar.gz
        tar -xzf gitleaks.tar.gz
        sudo mv gitleaks /usr/local/bin/
        gitleaks version

    - name: Run Gitleaks Scan
      run: |
        gitleaks detect \
          --source . \
          --report-path gitleaks-report.json \
          --report-format json

  # test:
  #   runs-on: self-hosted
  #   needs: security-check

  #   steps:
  #   - uses: actions/checkout@v4

  #   - name: Set up JDK 17
  #     uses: actions/setup-java@v4
  #     with:
  #       java-version: '17'
  #       distribution: 'temurin'
  #       cache: maven

  #   - name: Install Maven
  #     run: sudo apt-get update && sudo apt-get install -y maven

  #   - name: Run Unit Tests
  #     run: mvn test
      
  # build_project_and_sonar_scan:
  #   runs-on: self-hosted
  #   needs: test
  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Set up JDK 17
  #     uses: actions/setup-java@v4
  #     with:
  #       java-version: '17'
  #       distribution: 'temurin'
  #       cache: maven
  #   - name: Build Project
  #     run: mvn package
  #   - name: Upload JAR artifact
  #     uses: actions/upload-artifact@v4
  #     with:
  #       name: app-jar
  #       path: target/*.jar 
        
  #   - uses: actions/checkout@v4
  #     with:
  #       # Disabling shallow clones is recommended for improving the relevancy of reporting
  #       fetch-depth: 0
  #   - name: SonarQube Scan
  #     uses: SonarSource/sonarqube-scan-action@v5.0.0 # Ex: v4.1.0, See the latest version at https://github.com/marketplace/actions/official-sonarqube-scan
  #     env:
  #       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #       SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
        
  #   - name: SonarQube Quality Gate check
  #     id: sonarqube-quality-gate-check
  #     uses: sonarsource/sonarqube-quality-gate-action@master
  #     with:
  #       pollingTimeoutSec: 600
  #     env:
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #         SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
        

